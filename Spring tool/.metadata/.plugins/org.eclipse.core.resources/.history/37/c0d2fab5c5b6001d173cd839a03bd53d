package com.mockitotutorial.happyhotel.booking;

import org.junit.jupiter.api.*;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

import java.time.LocalDate;

class Test07VerifyingBehaviour {
	
	private BookingService bookingService;
	private  PaymentService paymentServiceMock;
	private  RoomService roomServiceMock;
	private  BookingDAO bookingDAOMock;
	private  MailSender mailSenderMock;
	
	@BeforeEach
	void Setup() {
		this.paymentServiceMock=mock(PaymentService.class);  // dummy object
		this.roomServiceMock=mock(RoomService.class);
		this.bookingDAOMock=mock(BookingDAO.class);
		this.mailSenderMock=mock(MailSender.class);
		
		
		this.bookingService = new BookingService(paymentServiceMock, roomServiceMock, bookingDAOMock, mailSenderMock); 
	}

	@Test
	void should_InvokePayment_when_prepaid() {
		// given
		BookingRequest bookingRequest= new BookingRequest("1",LocalDate.of(2020, 01, 01),LocalDate.of(2020, 01, 05),2,true);
	
		// when
		bookingService.makeBooking(bookingRequest); 
		
		// then
		
		verify(paymentServiceMock,times(1)).pay(bookingRequest, 400.0);
		verifyNoMoreInteractions(paymentServiceMock);
	}
	
	@Test
	void should_NotInvokePayment_when_Notprepaid() {
		// given
		BookingRequest bookingRequest= new BookingRequest("1",LocalDate.of(2020, 01, 01),LocalDate.of(2020, 01, 05),2,false);
	
		// when
		double actual =bookingService.calculatePrice(bookingRequest); 
		
		// then
		verify(paymentServiceMock,times(1)).pay(bookingRequest, 400.0);

		
	}

}
